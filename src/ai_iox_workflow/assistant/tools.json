[
{
  "type": "function",
  "function": {
    "name": "create_automation_routine",
    "description": "Automates and optimizes specified devices or locations based on customer input." ,
    "parameters": {
      "type": "object",
      "properties": {
        "devices_or_locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of devices or locations the customer wants to automate or optimize"
        },
        "original_input": {
          "type": "string",
          "description": "The full customer input, for reference and traceability"
        }
      },
      "required": ["devices_or_locations", "original_input"]
    }
  }
},
{
  "type": "function",
  "function": {
  "name": "utility_price_available_routine",
  "description": "This tool checks to see whether or not we have any services that offer utility prices or ghg signals.",
  "parameters": {
    "type": "object",
    "properties": {
      "customer_input": {
        "type": "string",
        "description": "The full customer input without any modifications"
      }
    },
    "required": [
      "customer_input"
    ]
  }
 }
},
{
  "type": "function",
  "function": {
  "name": "which_device_automatable",
  "description": "This tool checks to see which devices can be automated, optimized, or send a list of devices that can be automated.",
  "parameters": {
    "type": "object",
    "properties": {
      "customer_input": {
        "type": "string",
        "description": "The full customer input without any modifications"
      }
    },
    "required": [
      "customer_input"
    ]
  }
  }
},
{
  "type": "function",
  "function": {
  "name": "general_nucore_info",
  "description": "This tool answers specific questions about IoX, and NuCore.AI concepts such as plugins, editors, profiles, unit of measure, uom, nodedefs, properties, etc..",
  "parameters": {
    "type": "object",
    "properties": {
      "customer_input": {
        "type": "string",
        "description": "original customer input"
      }
    },
    "required": [
      "customer_input"
    ]
  }
 }
},
{
  "type": "function",
  "function": {
  "name": "get_comfort_settings",
  "description": "This tool retrieves and returns the user's comfort or savings settings and levels (Normal, Moderate, or High).", 
  "parameters": {
    "type": "object",
    "properties": {
      "mode": {
        "type": "string",
        "description": "either of savings, saving, or comfort. If not specified, defaults to comfort."
      },
      "customer_input": {
        "type": "string",
        "description": "original customer input"
      }
    },
    "required": [
      "mode", "customer_input"
    ]
  }
  }
},
{
  "type": "function",
  "function": {
  "name": "set_comfort_settings",
  "description": "This tool sets the user's comfort or savings settings or levels (Normal, Moderate, or High). If missing, default to Normal.", 
  "parameters": {
    "type": "object",
    "properties": {
      "level": {
        "type": "string",
        "description": "Extracted comfort settings from the customer input: Normal, Moderate, or High. If not specified, defaults to Normal."
      },
      "customer_input": {
        "type": "string",
        "description": "original customer input"
      }
    },
    "required": [
      "level", "customer_input"
    ]
  }
  }
},
{
  "type": "function",
  "function": {
  "name": "pass_to_system",
  "description": "This tool passes the customer input to the system for further processing.",
  "parameters": {
    "type": "object",
    "properties": {
      "customer_input": {
        "type": "string",
        "description": "The full customer input without any modifications"
      }
    },
    "required": [
      "customer_input"
    ]
  }
  }
}
]